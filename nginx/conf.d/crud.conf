# ============================
# Seguridad y defaults globales
# ============================
server_tokens off;

# Resolver necesario para OCSP stapling y DNS en tiempo de ejecución
resolver 1.1.1.1 8.8.8.8 valid=300s ipv6=off;

# ============================
# HTTP (80): ACME + redirección
# ============================
server {
  listen 80;
  server_name docker.between-bytes.tech;

  # ACME challenge (Certbot) desde el volumen compartido
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
    default_type text/plain;
    try_files $uri =404;
    add_header Cache-Control "no-store";
  }

  # Redirigir todo lo demás a HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# ============================
# HTTPS (443): TLS + proxy app
# ============================
server {
  listen 443 ssl http2;
  server_name docker.between-bytes.tech;

  # Certificados emitidos por Certbot (montados read-only en el contenedor)
  ssl_certificate     /etc/letsencrypt/live/docker.between-bytes.tech/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/docker.between-bytes.tech/privkey.pem;

  # Buenas prácticas TLS
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;

  # OCSP stapling (mejora de rendimiento/seguridad)
  ssl_stapling on;
  ssl_stapling_verify on;

  # ----------------------------
  # Headers de seguridad útiles
  # ----------------------------
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
  # CSP en modo REPORT-ONLY para no romper la app; ajústala y luego pásala a 'Content-Security-Policy'
  add_header Content-Security-Policy-Report-Only "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:;" always;

  # ----------------------------
  # ACME también por HTTPS (opcional)
  # ----------------------------
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
    default_type text/plain;
    try_files $uri =404;
    add_header Cache-Control "no-store";
  }

  # ----------------------------
  # Proxy a tu app (Frontend y Backend)
  # ----------------------------

  # Proxy a la app Frontend (React/Vite)
  location / {
    proxy_pass http://frontend:80;  # Redirige al contenedor de frontend
    proxy_http_version 1.1;

    # Cabeceras y forwarding correctos
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Timeouts razonables
    proxy_read_timeout 120s;
    proxy_connect_timeout 10s;
    proxy_send_timeout 120s;

    # Buffers (útiles si hay respuestas grandes)
    proxy_buffers 16 16k;
    proxy_buffer_size 16k;
  }

  # Proxy a la app Backend (Go API)
  location /api/ {
    proxy_pass http://backend:1000;  # Redirige al contenedor de backend
    proxy_http_version 1.1;

    # Cabeceras y forwarding correctos
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Timeouts razonables
    proxy_read_timeout 120s;
    proxy_connect_timeout 10s;
    proxy_send_timeout 120s;

    # Buffers (útiles si hay respuestas grandes)
    proxy_buffers 16 16k;
    proxy_buffer_size 16k;
  }
}
