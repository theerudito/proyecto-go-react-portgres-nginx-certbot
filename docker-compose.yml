
services:
  # --- BACKEND (Go) ---
  backend:
    build: ./backend
    container_name: go_backend
    env_file:
      - ./backend/.env
    ports:
      - "1000:1000"
    depends_on:
      - db
    networks:
      - app-network

  # --- FRONTEND (React/Vite) ---
  frontend:
    build: ./frontend
    container_name: react_frontend
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network
    ports:
      - "3000:80" 

  # --- DATABASE (PostgreSQL) ---
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1020
      POSTGRES_DB: naruto
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./backend/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  # --- NGINX Reverse Proxy ---
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "8081:80"
      - "4433:443"
    networks:
      - app-network

  # --- CERTBOT (SSL) ---
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot
      --webroot-path=/var/www/certbot
      --email erudito.dev@gmail.com
      --agree-tos
      --no-eff-email
      -d docker.between-bytes.tech"
    networks:
      - app-network

  # --- WATCHTOWER (auto-update) ---
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
    networks:
      - app-network

networks:
  app-network:

volumes:
  pg_data:
